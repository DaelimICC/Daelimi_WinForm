<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZjwAAAAASUVORK5CYII=
</value>
  </data>
</root>